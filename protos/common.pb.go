// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Msg struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (m *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(m, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Msg) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Msg)(nil), "protos.Msg")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xba, 0x5c,
	0xcc, 0xbe, 0xc5, 0xe9, 0x42, 0x42, 0x5c, 0x2c, 0x25, 0x95, 0x05, 0xa9, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0x60, 0x36, 0x48, 0x2c, 0x25, 0xb1, 0x24, 0x51, 0x82, 0x09, 0x22, 0x06, 0x62,
	0x1b, 0x99, 0x72, 0x71, 0x79, 0x24, 0xe6, 0xa5, 0xe4, 0xa4, 0x16, 0x81, 0x74, 0xa9, 0x73, 0x71,
	0x07, 0x14, 0xe5, 0xa7, 0x17, 0xa5, 0x16, 0x17, 0x83, 0xb8, 0xdc, 0x10, 0xb3, 0x8b, 0xf5, 0x7c,
	0x8b, 0xd3, 0xa5, 0x90, 0x39, 0x49, 0x10, 0xdb, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb9,
	0xdd, 0xcd, 0x5c, 0x84, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HandlerMsgClient is the client API for HandlerMsg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HandlerMsgClient interface {
	ProgressMsg(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Msg, error)
}

type handlerMsgClient struct {
	cc *grpc.ClientConn
}

func NewHandlerMsgClient(cc *grpc.ClientConn) HandlerMsgClient {
	return &handlerMsgClient{cc}
}

func (c *handlerMsgClient) ProgressMsg(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Msg, error) {
	out := new(Msg)
	err := c.cc.Invoke(ctx, "/protos.HandlerMsg/ProgressMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandlerMsgServer is the server API for HandlerMsg service.
type HandlerMsgServer interface {
	ProgressMsg(context.Context, *Msg) (*Msg, error)
}

// UnimplementedHandlerMsgServer can be embedded to have forward compatible implementations.
type UnimplementedHandlerMsgServer struct {
}

func (*UnimplementedHandlerMsgServer) ProgressMsg(ctx context.Context, req *Msg) (*Msg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProgressMsg not implemented")
}

func RegisterHandlerMsgServer(s *grpc.Server, srv HandlerMsgServer) {
	s.RegisterService(&_HandlerMsg_serviceDesc, srv)
}

func _HandlerMsg_ProgressMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlerMsgServer).ProgressMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.HandlerMsg/ProgressMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlerMsgServer).ProgressMsg(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

var _HandlerMsg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.HandlerMsg",
	HandlerType: (*HandlerMsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProgressMsg",
			Handler:    _HandlerMsg_ProgressMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common.proto",
}
